by:mcs
#include <iostream>
#include <omp.h>
using namespace std;
int main()
{
int fase;
int tmp;
int v2[] = {3,2,1,5,4};//int  v2[] = {11,9,10,7,4};
int i,j;

	#pragma omp parallel default(none) shared(v2) private(i, tmp, fase)//Usando default fuerzo a decidir el scope de TODAS las variables
	for (fase=0; fase<5;fase++)
	{
		if(fase % 2 == 0)
			#pragma omp for
			for (i=1;i<5;i+=2)
			{
				if(v2[i-1]>v2[i])
				{
					tmp = v2[i-1];
					v2[i-1] = v2[i];
					v2[i] = tmp;
				}
			}
		else
			#pragma omp for
			for(i=1;i<5-1;i+=2)
			{
				if(v2[i]>v2[i+1])
				{
					tmp=v2[i+1];
					v2[i+1] = v2[i];
					v2[i]= tmp;
				}
			}
	}
cout<<"odenamiento de burbujeo paralelo ";
#pragma omp for
for(i=0;i<5;i++){
    cout<<" ";
  cout<<v2[i];
}
    return 0;
}